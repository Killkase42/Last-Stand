import pygame

#Initialize Pygame.
pygame.init()

#Create screen.
screen = pygame.display.set_mode((1728, 972))

clock = pygame.time.Clock()

#Title and Icon
pygame.display.set_caption('Last Stand')
icon = pygame.image.load('icon.png')
pygame.display.set_icon(icon)

#Colours
white = (255, 255, 255)
black = (0, 0, 0)
orange = (225, 98, 0)
lightOrange = (245, 118, 0)


#Displaying text in various colours.
def textObjectsBlack(text, font):
    textSurface = font.render(text, True, black)
    return textSurface, textSurface.get_rect()

def textObjectsWhite(text, font):
    textSurface = font.render(text, True, white)
    return textSurface, textSurface.get_rect()

def printWhiteText(text, size, x, y ):
    descriptionText = pygame.font.Font('freesansbold.ttf', size)
    textSurf, textRect = textObjectsWhite(text, descriptionText)
    textRect.center = (x, y)
    screen.blit(textSurf, textRect)


#Battle button needs a separate function due to its shape and function.
def battleButton(action=None):
    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if 968 > mouse[0] > 770 and 73 > mouse[1] > 13:
        pygame.draw.rect(screen, lightOrange, [784, 13, 170, 60])
        pygame.draw.rect(screen, lightOrange, [770, 13, 7, 60])
        pygame.draw.rect(screen, lightOrange, [961, 13, 7, 60])
        if click[0] == 1 and action != None:
            if action == "play":
                confirmationScreen()

    # add sound later
    else:
        pygame.draw.rect(screen, orange, [784, 13, 170, 60])
        pygame.draw.rect(screen, orange, [770, 13, 7, 60])
        pygame.draw.rect(screen, orange, [961, 13, 7, 60])
    battleText = pygame.font.Font('freesansbold.ttf', 40)
    textSurf, textRect = textObjectsBlack('BATTLE', battleText)
    textRect.center = (869, 43)
    screen.blit(textSurf, textRect)

def enterGameButton(action=None):

    enterGameButton = pygame.image.load('lastStand.png')
    enterGameButtonX = 502
    enterGameButtonY = 180


    mouse = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    if 1226 > mouse[0] > 502 and 488 > mouse[1] > 180:
        pygame.draw.rect(screen, orange, [500, 178, 728, 312])
        screen.blit(enterGameButton, (enterGameButtonX, enterGameButtonY))
        if click[0] == 1 and action != None:
            if action == "play":
                gameLoop()

    # add sound later
    else:
        screen.blit(enterGameButton, (enterGameButtonX, enterGameButtonY))

#General function for all rectangular buttons.
def buttonFunc(message, x, y, w, h, inactive, active, textSize):
    if x + w > mouse[0] > x and y + h > mouse[1] > y:
        pygame.draw.rect(screen, active, (x, y, w, h))
    else:
        pygame.draw.rect(screen, inactive, (x, y, w, h))

    largeText = pygame.font.Font('freesansbold.ttf', textSize)
    textSurf, textRect = textObjects(message, largeText)
    textRect.center = ( (x + (w / 2)), (y + (h / 2)) )
    screen.blit(textSurf, textRect)

#Menu screen.
def gameMenu():
    menu = True

    while menu:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        screen.fill(black)

        #Drawing upper background.
        upperBackground = pygame.image.load('upperBackground.png')
        upperBackgroundX = 0
        upperBackgroundY = 0

        screen.blit(upperBackground, (upperBackgroundX, upperBackgroundY))

        # Backgrounds behind selectable ships.
        Background1 = pygame.image.load('shipSelectionBackground.png')
        Background1X = 17
        Background1Y = 810

        Background2 = pygame.image.load('shipSelectionBackground.png')
        Background2X = 304
        Background2Y = 810

        Background3 = pygame.image.load('shipSelectionBackground.png')
        Background3X = 585
        Background3Y = 810

        Background4 = pygame.image.load('shipSelectionBackground.png')
        Background4X = 867
        Background4Y = 810

        Background5 = pygame.image.load('shipSelectionBackground.png')
        Background5X = 1150
        Background5Y = 810

        Background6 = pygame.image.load('shipSelectionBackground.png')
        Background6X = 1436
        Background6Y = 810

        logo1 = pygame.image.load('logoUSR.png')
        logo1X = 45
        logo1Y = 830

        logo2 = pygame.image.load('logoUSR.png')
        logo2X = 335
        logo2Y = 830

        logo3 = pygame.image.load('logoZRK.png')
        logo3X = 615
        logo3Y = 830

        screen.blit(Background1, (Background1X, Background1Y))
        screen.blit(Background2, (Background2X, Background2Y))
        screen.blit(Background3, (Background3X, Background3Y))
        screen.blit(Background4, (Background4X, Background4Y))
        screen.blit(Background5, (Background5X, Background5Y))
        screen.blit(Background6, (Background6X, Background6Y))
        screen.blit(logo1, (logo1X, logo1Y))
        screen.blit(logo2, (logo2X, logo2Y))
        screen.blit(logo3, (logo3X, logo3Y))

        battleButton("play")


        pygame.display.update()
        clock.tick(60)

#Main loop.

def confirmationScreen():
    confirmation = True

    while confirmation:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

        confirmationBackground = pygame.image.load('confirmationBackground.png')
        confirmationBackgroundX = 0
        confirmationBackgroundY = 90

        screen.blit(confirmationBackground, (confirmationBackgroundX, confirmationBackgroundY))

        descriptionText = pygame.font.Font('freesansbold.ttf', 40)
        textSurf, textRect = textObjectsWhite('Add a description  of the game here.', descriptionText)
        textRect.center = (869, 600)
        screen.blit(textSurf, textRect)

        battleButton("play")
        enterGameButton("play")

        pygame.display.update()
    clock.tick(60)


#General HUD appearance.

def displayHUD():
    abilityBackground = pygame.image.load('Frame-fade.png')
    screen.blit(abilityBackground, (772, 830))
    screen.blit(abilityBackground, (660, 830))
    screen.blit(abilityBackground, (548, 830))
    screen.blit(abilityBackground, (884, 830))
    screen.blit(abilityBackground, (996, 830))
    screen.blit(abilityBackground, (1108, 830))

    pointDefenseSkill = pygame.image.load('pointDefense.png')
    screen.blit(pointDefenseSkill, (776, 834))

    warpSkill = pygame.image.load('warp.png')
    screen.blit(warpSkill, (888, 834))
    screen.blit(warpSkill, (1000, 834))


    #Minimap test.
    sector = pygame.image.load('sector.png')
    screen.blit(sector, (1280, 700))
    screen.blit(sector, (1404, 700))
    screen.blit(sector, (1528, 700))

    outpostSector = pygame.image.load('outpostSector.png')
    screen.blit(outpostSector, (1384, 830))


    printWhiteText('Alpha', 18, 1330, 687)
    printWhiteText('Delta', 18, 1453, 687)
    printWhiteText('Beta', 18, 1575, 687)
    printWhiteText('Outpost', 18, 1450, 817)


    #Report box test.
    pygame.draw.rect(screen, orange, [100, 700, 325, 230])

    #Base health/wave/turret health test.
    pygame.draw.rect(screen, orange, [500, 25, 728, 150])


#Different ships and their functionalities in-game.

def displayPioneer():

    displayHUD()





fleetSlotOne = 'Pioneer'
fleetSlotTwo = 'Colossus'
fleetSlotThree = 'Venturer'

def gameLoop():
    gameRunning = True

    while gameRunning:

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                gameRunning = False
                pygame.quit()
                quit()
            #if arrow keys are pressed, switch between different fleet functions being displayed.

        screen.fill(black)
        displayPioneer()

        pygame.display.update()
        clock.tick(60)

gameMenu()
confirmationScreen()
gameLoop()
pygame.quit()
quit()
